import{_ as e,o as t,c as d,Q as o}from"./chunks/framework.110e961c.js";const g=JSON.parse('{"title":"Function: useSelectTime","description":"","frontmatter":{},"headers":[],"relativePath":"dist/functions/hooks.useSelectTime.md","filePath":"dist/functions/hooks.useSelectTime.md"}'),l={name:"dist/functions/hooks.useSelectTime.md"},c=o('<p><a href="./../README.html">jhooks-react</a> / <a href="./../modules.html">Modules</a> / <a href="./../modules/hooks.html">hooks</a> / useSelectTime</p><h1 id="function-useselecttime" tabindex="-1">Function: useSelectTime <a class="header-anchor" href="#function-useselecttime" aria-label="Permalink to &quot;Function: useSelectTime&quot;">​</a></h1><p><a href="./../modules/hooks.html">hooks</a>.useSelectTime</p><p>▸ <strong>useSelectTime</strong>(<code>«destructured»?</code>): <code>Object</code></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>«destructured»</code></td><td style="text-align:left;"><code>Object</code></td></tr><tr><td style="text-align:left;">› <code>ctxFillStyle?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;">› <code>endCb?</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;">› <code>groupNum?</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>canvasRef</code></td><td style="text-align:left;"><code>MutableRefObject</code>&lt;<code>null</code> | <code>HTMLCanvasElement</code>&gt;</td></tr><tr><td style="text-align:left;"><code>contentRef</code></td><td style="text-align:left;"><code>MutableRefObject</code>&lt;<code>null</code> | <code>Element</code>&gt;</td></tr><tr><td style="text-align:left;"><code>delSelectedTime</code></td><td style="text-align:left;">(<code>index</code>: <code>number</code>) =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>selectedTimeList</code></td><td style="text-align:left;">{ <code>end</code>: <code>string</code> ; <code>start</code>: <code>string</code> }[]</td></tr><tr><td style="text-align:left;"><code>timeList</code></td><td style="text-align:left;">{ <code>checked</code>: <code>boolean</code> = false; <code>end</code>: <code>string</code> ; <code>start</code>: <code>string</code> }[][]</td></tr><tr><td style="text-align:left;"><code>timeRefs0</code></td><td style="text-align:left;"><code>MutableRefObject</code>&lt;(<code>null</code> | <code>Element</code>)[]&gt;</td></tr><tr><td style="text-align:left;"><code>timeRefs1</code></td><td style="text-align:left;"><code>MutableRefObject</code>&lt;(<code>null</code> | <code>Element</code>)[]&gt;</td></tr><tr><td style="text-align:left;"><code>timeRefs2</code></td><td style="text-align:left;"><code>MutableRefObject</code>&lt;(<code>null</code> | <code>Element</code>)[]&gt;</td></tr><tr><td style="text-align:left;"><code>timeRefs3</code></td><td style="text-align:left;"><code>MutableRefObject</code>&lt;(<code>null</code> | <code>Element</code>)[]&gt;</td></tr><tr><td style="text-align:left;"><code>toggleAll</code></td><td style="text-align:left;">(<code>value</code>: <code>boolean</code>) =&gt; <code>void</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/jiangyong1998/jhooks-react/blob/286a372/src/hooks/useSelectTime.ts#L85" target="_blank" rel="noreferrer">hooks/useSelectTime.ts:85</a></p>',11),a=[c];function s(n,i,r,f,u,h){return t(),d("div",null,a)}const x=e(l,[["render",s]]);export{g as __pageData,x as default};
